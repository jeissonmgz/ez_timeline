{"version":3,"file":"ez-range.js","sourceRoot":"","sources":["../src/ez-range.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACtC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE3D,OAAO,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AAE3E;;;;;;IAMI;AAEJ,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAQrC;QACE,KAAK,EAAE,CAAC;QAJgB,UAAK,GAAW,CAAC,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAIxC,MAAM,EAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAC,GAAI,IAAI,CAAC,aAAyC,CAAC;QACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACQ,gBAAgB;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,MAAM;QAEb,MAAM,MAAM,GAAG,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjD,OAAO,IAAI,CAAA;2CAC4B,MAAM;;;KAG5C,CAAC;IACJ,CAAC;IAEQ,OAAO;QACd,yBAAyB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;CACF,CAAA;AA/B2B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;qCAAc;AACb;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCAAY;AACX;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;qCAAc;AACb;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;sCAAmB;AAClB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCAAiB;AAN/B,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAiCnB;SAjCY,OAAO","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html } from 'lit';\r\nimport {customElement, property } from 'lit/decorators.js';\r\nimport { ITimeElement, ITimeRangeElement } from './models';\r\nimport { getGridCellRangeStyle, updateChildrenTimeElement } from './utils';\r\n\r\n/**\r\n  * An example element.\r\n  *\r\n  * @fires count-changed - Indicates when the count changes\r\n  * @slot - This element has a slot\r\n  * @csspart button - The button\r\n  */\r\n@customElement('ez-range')\r\nexport class EzRange extends LitElement implements ITimeElement, ITimeRangeElement {\r\n\r\n  @property({type: Number}) from: number;\r\n  @property({type: Number}) to: number;\r\n  @property({type: Number}) step: number;\r\n  @property({type: Number}) start: number = 0;\r\n  @property({type: Number}) end: number = 0;\r\n\r\n  constructor() {\r\n    super();\r\n    const {from, to, step} = (this.parentElement as unknown) as ITimeElement;\r\n    this.from = from;\r\n    this.to = to;\r\n    this.step = step;\r\n  }\r\n  override createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  override render() {\r\n    \r\n    const styles = getGridCellRangeStyle(this, this);\r\n\r\n    return html`\r\n      <div class=\"timeline__range\" style=${styles}>\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  override updated(): void {\r\n    updateChildrenTimeElement(this, this.childNodes);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'ez-range': EzRange;\r\n  }\r\n}\r\n"]}